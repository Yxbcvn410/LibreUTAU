<local:BorderlessWindow x:Class="LibreUtau.UI.MidiWindow"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:local="clr-namespace:LibreUtau.UI.Controls"
                        xmlns:localvm="clr-namespace:LibreUtau.UI.Models"
                        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                        xmlns:ic="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
                        xmlns:il="clr-namespace:Microsoft.Expression.Interactivity.Layout;assembly=Microsoft.Expression.Interactions"
                        xmlns:ib="clr-namespace:LibreUtau.UI.Behaviors"
                        Style="{StaticResource ResourceKey=UBorderlessWindow}" Title="Midi Editor"
                        KeyDown="Window_KeyDown" Closing="Window_Closing">
    <i:Interaction.Behaviors>
        <ib:BorderlessWindowBehavior />
    </i:Interaction.Behaviors>
    <Window.Resources>
        <localvm:MidiViewModel x:Key="midiVM" />
        <ContextMenu x:Key="pitchCxtMenu">
            <MenuItem x:Name="PitchCxtMenuItem_SetIn" Header="{StaticResource pitchcontextmenu.easein}"
                      Click="PitchCxtMenuItem_SetIn_Click" />
            <MenuItem x:Name="PitchCxtMenuItem_SetOut" Header="{StaticResource pitchcontextmenu.easeout}"
                      Click="PitchCxtMenuItem_SetOut_Click" />
            <MenuItem x:Name="PitchCxtMenuItem_SetInOut" Header="{StaticResource pitchcontextmenu.easeinout}"
                      Click="PitchCxtMenuItem_SetInOut_Click" />
            <MenuItem x:Name="PitchCxtMenuItem_SetLinear" Header="{StaticResource pitchcontextmenu.linear}"
                      Click="PitchCxtMenuItem_SetLinear_Click" />
            <MenuItem x:Name="PitchCxtMenuItem_AddPoint" Header="{StaticResource pitchcontextmenu.addpitchpoint}"
                      Click="PitchCxtMenuItem_AddPoint_Click" Loaded="PitchCxtMenuItem_AddPoint_Update" />
            <MenuItem x:Name="PitchCxtMenuItem_DeletePoint" Header="{StaticResource pitchcontextmenu.delpitchpoint}"
                      Click="PitchCxtMenuItem_DeletePoint_Click" Loaded="PitchCxtMenuItem_DelPoint_Update" />
            <MenuItem x:Name="PitchCxtMenuItem_SnapPoint" Header="{StaticResource pitchcontextmenu.snappoint}"
                      Click="PitchCxtMenuItem_SnapPoint_Click" Loaded="PitchCxtMenuItem_SnapPoint_Update" />
        </ContextMenu>
    </Window.Resources>
    <local:BorderlessWindow.MenuContent>
        <Grid Width="60" Height="20">
            <TextBox x:Name="partNameTextBox" Visibility="Hidden" />
            <ToggleButton x:Name="showPitchToggle" Style="{StaticResource ShowPitchToggleButtonStyle}"
                          Width="20" Margin="0,0,0,0" HorizontalAlignment="Left" Focusable="False"
                          IsChecked="{Binding ShowPitch, Source={StaticResource midiVM}}" ToolTip="Toggle pitch (I)">
                <ToggleButton.Content>
                    <Grid Width="18" Height="18">
                        <Ellipse Height="5" Width="5" StrokeThickness="1" Margin="2,0,0,4" HorizontalAlignment="Left"
                                 VerticalAlignment="Bottom"
                                 Stroke="{Binding ElementName=showPitchToggle, Path=Foreground}" />
                        <Ellipse Height="5" Width="5" StrokeThickness="1" Margin="0,4,2,0" HorizontalAlignment="Right"
                                 VerticalAlignment="Top"
                                 Stroke="{Binding ElementName=showPitchToggle, Path=Foreground}" />
                        <Path Data="M 6.5 11.5 L 8 11.5 L 8.5 11 L 9.5 7 L 10 6.5 L 11.5 6.5" StrokeThickness="1"
                              Stroke="{Binding ElementName=showPitchToggle, Path=Foreground}" />
                    </Grid>
                </ToggleButton.Content>
            </ToggleButton>
            <ToggleButton x:Name="showPhonemeToggle" Style="{StaticResource ShowPitchToggleButtonStyle}"
                          Width="20" Margin="20,0,0,0" HorizontalAlignment="Left" Focusable="False"
                          IsChecked="{Binding ShowPhoneme, Source={StaticResource midiVM}}"
                          ToolTip="Toggle phoneme (O)">
                <ToggleButton.Content>
                    <Grid Width="18" Height="18">
                        <Path Data="M 3 13 L 6 5.5 L 12 5.5 L 15 13" StrokeThickness="1"
                              Stroke="{Binding ElementName=showPhonemeToggle, Path=Foreground}" />
                    </Grid>
                </ToggleButton.Content>
            </ToggleButton>
            <ToggleButton x:Name="snapToggle" Style="{StaticResource ShowPitchToggleButtonStyle}"
                          Width="20" Margin="40,0,0,0" HorizontalAlignment="Left" Focusable="False"
                          IsChecked="{Binding Snap, Source={StaticResource midiVM}}" ToolTip="Snap (P)">
                <ToggleButton.Content>
                    <Grid Width="18" Height="18">
                        <Path
                            Data="M 4.5 13.5 L 7.5 13.5 L 7.5 9.5 A 1,1 0 1 1 10.5,9.5 L 10.5 13.5 L 13.5 13.5 L 13.5 8.5 A 1,1 0 1 0 4.5,8.5 Z"
                            StrokeThickness="1"
                            Stroke="{Binding Foreground, ElementName=snapToggle}" />
                    </Grid>
                </ToggleButton.Content>
            </ToggleButton>
        </Grid>
    </local:BorderlessWindow.MenuContent>
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="20" />
            <RowDefinition Height="*" MinHeight="200" />
            <RowDefinition Height="10" />
            <RowDefinition Height="150" MinHeight="100" MaxHeight="450" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="70" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>
        <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                Style="{StaticResource MidiWindowMainButton}"
                HorizontalAlignment="Center" VerticalAlignment="Center" Height="21" Width="21"
                Click="mainButton_Click" />
        <Grid Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" Height="20"
              ClipToBounds="True">
            <local:TimelineBackground x:Name="timelineBackground"
                                      QuarterOffset="{Binding QuarterOffset, Source={StaticResource midiVM}}"
                                      QuarterWidth="{Binding QuarterWidth, Source={StaticResource midiVM}}"
                                      OffsetX="{Binding OffsetX, Source={StaticResource midiVM}}"
                                      MinTickWidth="{Binding MinTickWidth, Source={StaticResource midiVM}}"
                                      BeatPerBar="{Binding BeatPerBar, Source={StaticResource midiVM}}"
                                      BeatUnit="{Binding BeatUnit, Source={StaticResource midiVM}}" />
            <Canvas x:Name="timelineCanvas" HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    Height="20" Margin="0,20,20,0"
                    Background="Transparent" ClipToBounds="True"
                    MouseWheel="timelineCanvas_MouseWheel" MouseLeftButtonDown="timelineCanvas_MouseLeftButtonDown"
                    MouseMove="timelineCanvas_MouseMove" MouseLeftButtonUp="timelineCanvas_MouseLeftButtonUp" />
        </Grid>
        <Grid Grid.Row="2" Grid.Column="1" ClipToBounds="True">
            <local:KeyTrackBackground x:Name="keyTrackBackground"
                                      TrackHeight="{Binding TrackHeight, Source={StaticResource midiVM}}"
                                      OffsetY="{Binding OffsetY, Source={StaticResource midiVM}}"
                                      local:SizeObserver.Observe="True"
                                      local:SizeObserver.ObservedHeight="{Binding ViewHeight, Source={StaticResource midiVM}, Mode=OneWayToSource}"
                                      local:SizeObserver.ObservedWidth="{Binding ViewWidth, Source={StaticResource midiVM}, Mode=OneWayToSource}" />
            <local:TickBackground x:Name="tickBackground"
                                  QuarterOffset="{Binding QuarterOffset, Source={StaticResource midiVM}}"
                                  QuarterWidth="{Binding QuarterWidth, Source={StaticResource midiVM}}"
                                  OffsetX="{Binding OffsetX, Source={StaticResource midiVM}}"
                                  MinTickWidth="{Binding MinTickWidth, Source={StaticResource midiVM}}"
                                  BeatPerBar="{Binding BeatPerBar, Source={StaticResource midiVM}}"
                                  BeatUnit="{Binding BeatUnit, Source={StaticResource midiVM}}" />
            <Canvas x:Name="notesCanvas" HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch" Background="Transparent"
                    ClipToBounds="True" SnapsToDevicePixels="True"
                    MouseLeftButtonDown="notesCanvas_MouseLeftButtonDown"
                    MouseRightButtonDown="notesCanvas_MouseRightButtonDown"
                    MouseLeftButtonUp="notesCanvas_MouseLeftButtonUp" MouseMove="notesCanvas_MouseMove"
                    MouseWheel="notesCanvas_MouseWheel" MouseRightButtonUp="notesCanvas_MouseRightButtonUp" />
            <Canvas x:Name="phonemeCanvas" HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Height="48"
                    ClipToBounds="True" SnapsToDevicePixels="True" Background="White" Opacity="0.75"
                    Visibility="{Binding PhonemeVisibility, Source={StaticResource midiVM}}" />
            <Rectangle x:Name="phonemeCanvasShadow" HorizontalAlignment="Stretch"
                       VerticalAlignment="Bottom" Margin="0,0,0,48" Height="5"
                       SnapsToDevicePixels="True" Opacity="0.15" IsHitTestVisible="False"
                       Visibility="{Binding PhonemeVisibility, Source={StaticResource midiVM}}">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="Transparent" Offset="0" />
                        <GradientStop Color="Black" Offset="1" />
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Grid>

        <Border Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" x:Name="notesCanvasShadow" Background="{x:Null}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" BorderThickness="0" ClipToBounds="True">
            <Border Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Margin="-1">
                <Border.Effect>
                    <DropShadowEffect Color="Black" ShadowDepth="0" BlurRadius="5" Opacity="0.75" />
                </Border.Effect>
                <Grid x:Name="LyricEnterGrid" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Visibility="Hidden" Width="240" Height="240">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBox Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                             x:Name="LyricBox" FontSize="18" Margin="1"
                             KeyDown="LyricBox_KeyDown" KeyUp="LyricBox_KeyUp" TextChanged="LyricBox_TextChanged" />
                    <ListBox Grid.Row="1" Grid.RowSpan="4" HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch" Margin="1"
                             x:Name="LyricVariants"
                             SelectionChanged="LyricVariants_OnSelected" KeyDown="LyricVariants_KeyDown"
                             MouseDoubleClick="LyricVariants_OnMouseDoubleClick" />
                </Grid>
            </Border>
        </Border>

        <ScrollBar x:Name="horizontalScroll" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch"
                   VerticalAlignment="Bottom"
                   Height="20" Orientation="Horizontal" Minimum="0"
                   Maximum="{Binding TotalWidth, Mode=OneWay, Source={StaticResource midiVM}}"
                   Value="{Binding OffsetX, Mode=TwoWay, Source={StaticResource midiVM}, UpdateSourceTrigger=PropertyChanged}"
                   ViewportSize="{Binding ViewportSizeX, Source={StaticResource midiVM}}"
                   LargeChange="{Binding ViewportSizeX, Source={StaticResource midiVM}}"
                   SmallChange="{Binding SmallChangeX, Source={StaticResource midiVM}}">
            <i:Interaction.Behaviors>
                <ib:ScrollbarBehavior />
            </i:Interaction.Behaviors>
        </ScrollBar>
        <ScrollBar x:Name="verticalScroll" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Right"
                   VerticalAlignment="Stretch"
                   Width="20" Orientation="Vertical" Minimum="0"
                   Maximum="{Binding TotalHeight, Mode=OneWay, Source={StaticResource midiVM}}"
                   Value="{Binding OffsetY, Mode=TwoWay, Source={StaticResource midiVM}, UpdateSourceTrigger=PropertyChanged}"
                   ViewportSize="{Binding ViewportSizeY, Source={StaticResource midiVM}}"
                   LargeChange="{Binding ViewportSizeY, Source={StaticResource midiVM}}"
                   SmallChange="{Binding SmallChangeY, Source={StaticResource midiVM}}">
            <i:Interaction.Behaviors>
                <ib:ScrollbarBehavior />
            </i:Interaction.Behaviors>
        </ScrollBar>
        <local:NavigateDrag Grid.Row="0" Grid.Column="2" x:Name="navigateDrag" HorizontalAlignment="Right"
                            VerticalAlignment="Bottom" Width="20"
                            Height="20" NavDrag="navigateDrag_NavDrag" />
        <local:ViewScaler Grid.Row="1" Grid.Column="2" x:Name="viewScaler" HorizontalAlignment="Right"
                          VerticalAlignment="Top" Width="20"
                          Height="20" />
        <Grid Grid.Row="2" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              ClipToBounds="True">
            <local:KeyboardBackground x:Name="keyboardBackground"
                                      TrackHeight="{Binding TrackHeight, Source={StaticResource midiVM}}"
                                      OffsetY="{Binding OffsetY, Source={StaticResource midiVM}}" />
            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,40,0,0"
                    Background="Transparent"
                    ClipToBounds="True" MouseLeftButtonDown="keysCanvas_MouseLeftButtonDown"
                    MouseLeftButtonUp="keysCanvas_MouseLeftButtonUp"
                    MouseMove="keysCanvas_MouseMove" MouseWheel="keysCanvas_MouseWheel" />
        </Grid>
        <GridSplitter Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch" Height="10"
                      Background="White" Focusable="False" />
        <Grid Grid.Row="4" Grid.Column="1" ClipToBounds="True">
            <local:TickBackground x:Name="ExpTickBackground"
                                  QuarterOffset="{Binding QuarterOffset, Source={StaticResource midiVM}}"
                                  QuarterWidth="{Binding QuarterWidth, Source={StaticResource midiVM}}"
                                  OffsetX="{Binding OffsetX, Source={StaticResource midiVM}}"
                                  MinTickWidth="{Binding MinTickWidth, Source={StaticResource midiVM}}"
                                  BeatPerBar="{Binding BeatPerBar, Source={StaticResource midiVM}}"
                                  BeatUnit="{Binding BeatUnit, Source={StaticResource midiVM}}" />
        </Grid>
        <Grid Grid.Row="4" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="22" />
                <RowDefinition Height="22" />
                <RowDefinition Height="22" />
                <RowDefinition Height="22" />
            </Grid.RowDefinitions>
            <local:ExpComboBox x:Name="expCombo0" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                               Grid.Row="0" />
            <local:ExpComboBox x:Name="expCombo1" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                               Grid.Row="1" />
            <local:ExpComboBox x:Name="expCombo2" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                               Grid.Row="2" />
            <local:ExpComboBox x:Name="expCombo3" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                               Grid.Row="3" />
        </Grid>
        <Canvas x:Name="expCanvas" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" Background="Transparent" ClipToBounds="True"
                MouseLeftButtonDown="expCanvas_MouseLeftButtonDown" MouseLeftButtonUp="expCanvas_MouseLeftButtonUp"
                MouseMove="expCanvas_MouseMove" />
        <ScrollBar x:Name="expVerticalScroll" Grid.Row="4" Grid.Column="2" HorizontalAlignment="Right"
                   VerticalAlignment="Stretch"
                   Width="20" Orientation="Vertical" ViewportSize="10000" />
        <Border x:Name="expCanvasShadow" Grid.Row="4" Grid.Column="1" Background="{x:Null}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" BorderThickness="0" ClipToBounds="True">
            <Border Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Margin="-1">
                <Border.Effect>
                    <DropShadowEffect Color="Black" ShadowDepth="0" BlurRadius="5" Opacity="0.75" />
                </Border.Effect>
            </Border>
        </Border>
    </Grid>
</local:BorderlessWindow>